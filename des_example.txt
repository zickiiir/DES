1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16   17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44                                                          
0 1 1 0 0 0 0 1 0  1  1  0  0  1  0  0 |  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  

45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1


INIT PERM - correct
11111111 11111100 11111110 11111101 (L)
00000000 00000011 11111100 11111100 (R)

R XOR KEY
00000000 00000000 00000111 11111111 10010111 11111000 (R)
01100001 01110011 01100100 01100110 01100111 01101000 (KEY - first 48 bits)

01100001 01110011 01100011 10011001 11110000 10010000 (XOR)

01100001 01110011 01100011 10011001 11110000 10010000




http://page.math.tu-berlin.de/~kant/teaching/hess/krypto-ws2006/des.htm

M = 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111
M = 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111

K = 00010011 00110100 01010111 01111001 10011011 10111100 11011111 11110001

K1 = 000110 110000 001011 101111 111111 000111 000001 110010
K1 = 000110 110000 001011 101111 111111 000111 000001 110010

K2 = 011110 011010 111011 011001 110110 111100 100111 100101
K2 = 011110 011010 111011 011001 110110 111100 100111 100101

K3 = 010101 011111 110010 001010 010000 101100 111110 011001
K3 = 010101 011111 110010 001010 010000 101100 111110 011001

011100 101010 110111 010110 110110 110011 010100 011101
011100 101010 110111 010110 110110 110011 010100 011101


R16L16 = 00001010 01001100 11011001 10010101 01000011 01000010 00110010 00110100 // spravne
         

FINAL = 10000101 11101000 00010011 01010100 00001111 00001010 10110100 00000101 // spravne
        